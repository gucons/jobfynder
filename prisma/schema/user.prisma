model User {
    id             String  @id @default(uuid())
    name           String
    username       String
    email          String  @unique
    image          String?
    hashedPassword String?
    emailVerified  Boolean @default(false)
    OTP            OTP[]

    // ! These fields are to be reconsidered
    role               UserRole             @default(PENDING)
    // Basic Info
    basicInfoId        String?
    basicInfo          BasicInfo?
    // Relations to roles
    consultantProfile  Consultant?
    benchSalesProfile  BenchSales?
    recruiterProfile   Recruiter?
    // Posts
    posts              Post[]
    // Comments
    comments           Comment[]
    // Notifications
    InfoNotification   InfoNotification[]
    ActionNotification ActionNotification[]
    // Auth Sessions
    accounts           Account[]
    sessions           Session[]
    Authenticator      Authenticator[]
    createdAt          DateTime             @default(now())
    updatedAt          DateTime             @updatedAt

    @@index([id, email, username])
    @@unique([id, email])
    @@unique([id, username])
}

enum UserRole {
    PENDING
    CONSULTANT
    BENCH_SALES
    RECRUITER
}

model OTP {
    id         String     @id @default(cuid())
    userId     String
    user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
    code       String     @db.VarChar(6)
    purpose    OTPPurpose
    expiry     DateTime
    usageCount Int        @default(0) // To track the number of times the OTP is used
    used       Boolean    @default(false) // To track if the OTP was already used
    createdAt  DateTime   @default(now())

    @@unique([userId, purpose]) // Single OTP per user per purpose
}

enum OTPPurpose {
    EMAIL_VERIFICATION
    PASSWORD_RESET
}
